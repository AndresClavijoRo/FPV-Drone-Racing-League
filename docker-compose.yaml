services:
  database:
    container_name: db_backend
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    image: 'postgres:latest'
    restart: always
    shm_size: 128mb
    ports: 
      - "5555:5432"
    environment:
      - POSTGRES_DB=backend_ifpv
      - POSTGRES_USER=ifpv_user
      - POSTGRES_PASSWORD=ifpv_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis_broker
    image: redis:alpine
    ports:
      - 6379:6379
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: on-failure
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf     
      - upload-files:/srv/upload
    depends_on:
      app:
        condition: service_started 
  celery_worker:
    container_name: celery_worker
    volumes:
      - upload-files:/srv/upload
    build: './backend'
    restart: on-failure
    command: celery -A make_celery  worker --loglevel INFO
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
  app:
    container_name: backend_ifpv
    command: gunicorn --workers=4  app:app  --bind 0.0.0.0:8000
    volumes:
      - upload-files:/srv/upload
    build: './backend'
    restart: on-failure
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
volumes:
  postgresql-data:
    driver: local
    name: postgresql-data
  upload-files:
    driver: local
    name: upload-files